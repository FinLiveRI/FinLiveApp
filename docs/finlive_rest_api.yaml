openapi: "3.0.2"
info:
  title: FinLiveRI API
  version: "1.0"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_superuser:
          type: boolean
        is_staff:
          type: boolean
        is_active:
          type: boolean
        last_login:
          type: string
          format: date-time
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
    animal:
      type: object
      required:
        - name
        - euid
        - birthdate
        - animalid
        - organization
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        euid:
          type: string
        breed:
          type: string
        gender:
          type: string
        birthdate:
          type: string
          format: date
        animalid:
          type: integer
        rfid:
          type: string
        arrivaldate:
          type: string
          format: date
        departuredate:
          type: string
          format: date
        departurereason:
          type: string
        organization:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    gender:
      properties:
        id:
          type: integer
          readOnly: True
        abbreviation:
          type: string
        name:
          type: string
    breed:
      properties:
        id:
          type: integer
          readOnly: True
        number:
          type: integer
        abbreviation:
          type: string
        name:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    calving:
      properties:
        id:
          type: integer
          readOnly: True
        animal:
          type: integer
        organization:
          type: integer
        date:
          type: string
          format: date
        assistance:
          type: string
        calvingnumber:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    calving_post:
      properties:
        euid:
          type: string
        animal:
          type: integer
        organization:
          type: integer
        date:
          type: string
          format: date
        assistance:
          type: string
        calvingnumber:
          type: integer
    organization:
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    barn:
      properties:
        id:
          type: integer
          readOnly: true
        farmid:
          type: integer
        name:
          type: string
        description:
          type: string
        organization:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
servers:
  - url: https://api.server.test/api/v1
paths:
  /auth/login:
    post:
      description: Login with user credentials
      tags:
        - Auth
      security:
        - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login waas succesful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/refresh:
    post:
      description: Refreshing accesstoken
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
      responses:
        '200':
          description: Token refresh was succesful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
  /animal:
    post:
      description: Adds one or more animals to the database
      tags:
        - Animal
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/animal'
                - $ref: '#/components/schemas/animal'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/animal'
    get:
      description: Returns all animals that the user has access to
      tags:
        - Animal
      responses:
        '200':
          description: Animal list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/animal'
  /animal/{id}:
    get:
      description: Returns animal information specified by the id
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of animal
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Animal information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal'
    patch:
      description: Modifies animal information
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of animal
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/animal'
      responses:
        '200':
          description: Updated animal information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal'
  /gender:
    post:
      description: Adds one or more gender to the database
      tags:
        - Animal
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/gender'
                - $ref: '#/components/schemas/gender'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gender'
    get:
      description: Returns all genders in the database
      tags:
        - Animal
      responses:
        '200':
          description: Returns all genders in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gender'
  /breed:
    post:
      description: Adds one or more breed to the database
      tags:
        - Animal
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/breed'
                - $ref: '#/components/schemas/breed'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/breed'
    get:
      description: Returns all breeds in the database
      tags:
        - Animal
      responses:
        '200':
          description: Returns all breeds in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/breed'
  /breed/{id}:
    get:
      description: Returns breed information specified by the id
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of breed
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Animal list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/breed'
    patch:
      description: Modifies breed information
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of breed
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/breed'
      responses:
        '200':
          description: Updated breed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/breed'
  /calving:
    post:
      description: Adds one or more calvings to the database
      tags:
        - Animal
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/calving_post'
                - $ref: '#/components/schemas/calving_post'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/calving'
    get:
      description: Returns all calvings in the database
      tags:
        - Animal
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all calvings in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/calving'
  /calving/{id}:
    get:
      description: Returns calving information specified by the id
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of calving
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Calving information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calving'
    patch:
      description: Modifies calving information
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of calving
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/calving'
      responses:
        '200':
          description: Updated calving information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calving'
  /management/barn:
    post:
      description: Adds one or more barns to the database
      tags:
        - Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/barn'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/barn'
    get:
      description: Returns all barns in the database
      tags:
        - Management
      responses:
        '200':
          description: Returns all barns in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/barn'
  /management/barn/{id}:
    get:
      description: Returns barn information specified by the id
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of barn
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns requested barn infromation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/barn'
    patch:
      description: Modifies barn information
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of barn
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/barn'
      responses:
        '200':
          description: Updated barn information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/barn'
  /management/organisations:
    post:
      description: Adds an organization to the database
      tags:
        - Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
    get:
      description: Returns all organizations in the database
      tags:
        - Management
      responses:
        '200':
          description: Returns all organizations in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization'
  /management/organizations/{id}:
    get:
      description: Returns organization information specified by the id
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns requested organization infromation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
    patch:
      description: Modifies organization information
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of organization
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        '200':
          description: Updated organization information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
openapi: "3.0.2"
info:
  title: FinLiveRI API
  version: "1.0"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_superuser:
          type: boolean
        is_staff:
          type: boolean
        is_active:
          type: boolean
        last_login:
          type: string
          format: date-time
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
    useraccount:
      type: object
      properties:
        user:
          type: integer
          description: user id
        usertype:
          type: string
          description: Possible values 'SUPERUSER', 'ADMIN', 'EDITOR', 'VIEWER'
        retries:
          type: integer
          description: Allowed login retries
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
    accountwithuserdata:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        retries:
          type: integer
        usertype:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
        modified_by:
          type: integer
    animal:
      type: object
      required:
        - name
        - euid
        - birthdate
        - animalid
        - organization
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        euid:
          type: string
        breed:
          type: string
        gender:
          type: string
        birthdate:
          type: string
          format: date
        animalid:
          type: integer
        rfid:
          type: string
        arrivaldate:
          type: string
          format: date
        departuredate:
          type: string
          format: date
        departurereason:
          type: string
        organization:
          type: string
        farmid:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    gender:
      properties:
        id:
          type: integer
          readOnly: True
        abbreviation:
          type: string
        name:
          type: string
    breed:
      properties:
        id:
          type: integer
          readOnly: True
        number:
          type: integer
        abbreviation:
          type: string
        name:
          type: string
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    calving:
      properties:
        id:
          type: integer
          readOnly: True
        animal:
          type: integer
        organization:
          type: integer
        date:
          type: string
          format: date
        assistance:
          type: string
        calvingnumber:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    calving_post:
      properties:
        euid:
          type: string
        animal:
          type: integer
        organization:
          type: integer
        date:
          type: string
          format: date
        assistance:
          type: string
        calvingnumber:
          type: integer
    organization:
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    barn:
      properties:
        id:
          type: integer
          readOnly: true
        farmid:
          type: integer
        name:
          type: string
        description:
          type: string
        organization:
          type: integer
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    equipment:
      properties:
        id:
          type: integer
          readOnly: true
        equipmentid:
          type: integer
        name:
          type: string
        type:
          type: string
        description:
          type: string
        organization:
          type: integer
        farmid:
          type: integer
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    laboratory:
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    feed:
      properties:
        id:
          type: integer
          readOnly: true
        mixing_date:
          type: string
          format: date
        fresh_weight:
          type: number
        dry_matter_content:
          type: integer
        date:
          type: string
          format: date
        feedid:
          type: integer
        organization:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    feeding:
      properties:
        visit_start_time:
          type: string
          format: date-time
        visit_end_time:
          type: string
          format: date-time
        visit_duration:
          type: integer
        feed_weight:
          type: number
        feed_consumption:
          type: number
        animal_id:
          type: integer
        equipmentid:
          type: integer
        feedid:
          type: integer
        organization_id:
          type: integer
        farmid:
          type: integer
    feedingoutput:
      properties:
        id:
          type: integer
          readOnly: true
        visit_start_time:
          type: string
          format: date-time
        visit_end_time:
          type: string
          format: date-time
        visit_duration:
          type: integer
        feed_weight:
          type: number
        feed_consumption:
          type: number
        animal_id:
          type: integer
        equipment_id:
          type: integer
        feed_id:
          type: integer
        organization_id:
          type: integer
        barn_id:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    weight:
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
        weight:
          type: number
        automaticmeasurement:
          type: boolean
        animalid:
          type: integer
        equipment_id:
          type: string
        organization:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
    milking:
      properties:
        id:
          type: integer
          readOnly: true
        animalid:
          type: integer
          writeOnly: true
        animal:
          type: integer
          readOnly: true
        total_milk_weight:
          type: number
        rf_milk:
          type: number
        rb_milk:
          type: number
        lf_milk:
          type: number
        lb_milk:
          type: number
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        rf_conductivity:
          type: number
        rb_conductivity:
          type: number
        lf_conductivity:
          type: number
        lb_conductivity:
          type: number
        somatic_cell_count:
          type: number
        colour:
          type: string
        temperature:
          type: number
        total_flow_duration:
          type: integer
        rf_flow_duration:
          type: integer
        rb_flow_duration:
          type: integer
        lf_flow_duration:
          type: integer
        lb_flow_duration:
          type: integer
        milking_system:
          type: string
          readOnly: true
        farmid:
          type: integer
          writeOnly: true
        barn:
          type: integer
          readOnly: true
        organization:
          type: string
          writeOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: string
          readOnly: true
servers:
  - url: https://api.server.test/api/v1
security:
  - BearerAuth: []
paths:
  /auth/login:
    post:
      description: Login with user credentials
      tags:
        - Auth
      security:
        - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login waas succesful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/refresh:
    post:
      description: Refreshing accesstoken
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
      responses:
        '200':
          description: Token refresh was succesful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
  /animal:
    post:
      description: Adds one or more animals to the database
      tags:
        - Animal
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/animal'
                - $ref: '#/components/schemas/animal'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/animal'
    get:
      description: Returns all animals that the user has access to
      tags:
        - Animal
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Animal list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/animal'
  /animal/{id}:
    get:
      description: Returns animal information specified by the id
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of animal
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Animal information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal'
    patch:
      description: Modifies animal information
      tags:
        - Animal
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: ID of animal
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/animal'
      responses:
        '200':
          description: Updated animal information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal'
  /gender:
    post:
      description: Adds one or more gender to the database
      tags:
        - Animal
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/gender'
                - $ref: '#/components/schemas/gender'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gender'
    get:
      description: Returns all genders in the database
      tags:
        - Animal
      responses:
        '200':
          description: Returns all genders in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gender'
  /gender/{id}:
    get:
      description: Returns gender information specified by the id
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of gender
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Gender information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gender'
    patch:
      description: Modifies gender information
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of gender
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gender'
      responses:
        '200':
          description: Updated gender information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gender'
  /breed:
    post:
      description: Adds one or more breed to the database
      tags:
        - Animal
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/breed'
                - $ref: '#/components/schemas/breed'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/breed'
    get:
      description: Returns all breeds in the database
      tags:
        - Animal
      responses:
        '200':
          description: Returns all breeds in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/breed'
  /breed/{id}:
    get:
      description: Returns breed information specified by the id
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of breed
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Animal list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/breed'
    patch:
      description: Modifies breed information
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of breed
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/breed'
      responses:
        '200':
          description: Updated breed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/breed'
  /calving:
    post:
      description: Adds one or more calvings to the database
      tags:
        - Animal
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/calving_post'
                - $ref: '#/components/schemas/calving_post'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/calving'
    get:
      description: Returns all calvings in the database
      tags:
        - Animal
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all calvings in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/calving'
  /calving/{id}:
    get:
      description: Returns calving information specified by the id
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of calving
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Calving information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calving'
    patch:
      description: Modifies calving information
      tags:
        - Animal
      parameters:
        - name: id
          in: path
          description: ID of calving
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/calving'
      responses:
        '200':
          description: Updated calving information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calving'
  /milking:
    post:
      description: Adds milking events to database
      tags:
        - Milking
      security:
        - BearerAuth: [ ]
        - ApiKeyAuth: [ ]
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/milking'
      responses:
        '201':
          description: Milkings added succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/milking'
    get:
      description: Gets milking events from database
      tags:
        - Milking
      security:
        - BearerAuth: [ ]
        - ApiKeyAuth: [ ]
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Milkings events fetched succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/milking'
  /milking/{id}:
    get:
      description: Returns milking information specified by the id
      tags:
        - Milking
      security:
        - BearerAuth: [ ]
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          description: ID of milking event
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Milking information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milking'
    patch:
      description: Modifies milking information
      tags:
        - Milking
      security:
        - BearerAuth: [ ]
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          description: ID of milking event
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/milking'
      responses:
        '200':
          description: Updated milking information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milking'
  /feeding/feed:
    post:
      description: Adds feeds to database
      tags:
        - Feeding
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/feed'
      responses:
        '201':
          description: Feeds added succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/feed'
    get:
      description: Returns feeds in the database
      tags:
        - Feeding
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all feeds in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/feed'
  /feeding/feed/{id}:
    get:
      description: Returns milking information specified by the id
      tags:
        - Feeding
      parameters:
        - name: id
          in: path
          description: ID of feed
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Feed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feed'
    patch:
      description: Modifies feed information
      tags:
        - Milking
      parameters:
        - name: id
          in: path
          description: ID of feed
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/feed'
      responses:
        '200':
          description: Updated feed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feed'
  /feeding/feeding:
    post:
      description: Adds new feeding events
      tags:
        - Feeding
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/feeding'
      responses:
        '201':
          description: A account created succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/feedingoutput'
    get:
      description: Returns all feedings in the database
      tags:
        - Feeding
      security:
        - ApiKeyAuth: []
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all feedings in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/feedingoutput'
  /management/account:
    post:
      description: Creates a new account
      tags:
        - Management
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/user'
                usertype:
                  type: string
                  description: Possible values are 'Admin', 'Editor', 'Viewer'. Default is 'Viewer'.
      responses:
        '201':
          description: A account created succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/user'
                  retries:
                    type: integer
                  usertype:
                    type: string
                  created:
                    type: string
                    format: date-time
                  modified:
                    type: string
                    format: date-time
                  created_by:
                    type: integer
                  modified_by:
                    type: integer
    get:
      description: Creates a new account
      tags:
        - Management
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A account created succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountwithuserdata'
        '400':
          description: Bad request
  /management/account/{id}:
    get:
      description: Returns account information specified by the id
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the requested account infromation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountwithuserdata'
    patch:
      description: Modifies the account information
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountwithuserdata'
      responses:
        '200':
          description: Updated account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountwithuserdata'
  /management/barn:
    post:
      description: Adds one or more barns to the database
      tags:
        - Management
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/barn'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/barn'
    get:
      description: Returns all barns in the database
      tags:
        - Management
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all barns in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/barn'
  /management/barn/{id}:
    get:
      description: Returns barn information specified by the id
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of barn
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns requested barn infromation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/barn'
    patch:
      description: Modifies barn information
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of barn
          required: true
          schema:
            type: string
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/barn'
      responses:
        '200':
          description: Updated barn information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/barn'
  /management/equipments:
    post:
      description: Adds a piece of equipment to the database
      tags:
        - Management
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/equipment'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/equipment'
    get:
      description: Returns all equipment in the database
      tags:
        - Management
      parameters:
        - name: x-org
          in: header
          description: organization id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all equipment in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/equipment'
  /management/laboratory:
    post:
      description: Adds one or more laboratories to the database
      tags:
        - Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/laboratory'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/laboratory'
    get:
      description: Returns all laboratories in the database
      tags:
        - Management
      responses:
        '200':
          description: Returns all laboratories in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/laboratory'
  /management/laboratory/{id}:
    get:
      description: Returns laboratory information specified by the id
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of laboratory
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns requested laboratory infromation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/laboratory'
    patch:
      description: Modifies laboratory information
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of laboratory
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/laboratory'
      responses:
        '200':
          description: Updated laboratory information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/laboratory'
  /management/organisations:
    post:
      description: Adds an organization to the database
      tags:
        - Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        '201':
          description: Addition was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
    get:
      description: Returns all organizations in the database
      tags:
        - Management
      responses:
        '200':
          description: Returns all organizations in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization'
  /management/organizations/{id}:
    get:
      description: Returns organization information specified by the id
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns requested organization infromation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
    patch:
      description: Modifies organization information
      tags:
        - Management
      parameters:
        - name: id
          in: path
          description: ID of organization
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        '200':
          description: Updated organization information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'